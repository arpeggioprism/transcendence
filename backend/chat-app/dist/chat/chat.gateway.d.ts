import { OnGatewayConnection, OnGatewayDisconnect } from '@nestjs/websockets';
import { Server, Socket } from 'socket.io';
import { ChatService } from './chat.service';
import { UserService } from 'src/user/user.service';
import { AuthService } from 'src/auth/auth.service';
import { DmChannelDto, JoinGroupChannelDto, GroupChannelDto } from './dto/channel-dto';
import { UpdatePasswordDto, UpdateUserInfoDto } from './dto/update-dto';
import { GroupMessageDto } from './dto/message-dto';
import { RelationService } from 'src/relation/relation.service';
import { InviteGameDto } from './dto/game-dto';
export declare class ChatGateway implements OnGatewayConnection, OnGatewayDisconnect {
    private authService;
    private userService;
    private relationServie;
    private chatService;
    server: Server;
    constructor(authService: AuthService, userService: UserService, relationServie: RelationService, chatService: ChatService);
    private logger;
    private userSocketMap;
    handleConnection(client: Socket): Promise<void>;
    handleDisconnect(client: any): Promise<void>;
    private getKeyByValue;
    private socketToUser;
    private userIdToSocket;
    onCreateGroupChannel(client: Socket, groupChannelDto: GroupChannelDto): Promise<void>;
    onEnterDmChannel(client: Socket, dmChannelDto: DmChannelDto): Promise<void>;
    onJoinGroupChannel(client: Socket, joinGroupChannelDto: JoinGroupChannelDto): Promise<void>;
    onPostGroupMessage(client: Socket, groupMessageDto: GroupMessageDto): Promise<void>;
    onLeaveChannel(client: Socket, channelId: number): Promise<void>;
    onCloseChannelWindow(client: Socket, channelId: number): Promise<void>;
    onSetAdmin(client: Socket, updateUserInfoDto: UpdateUserInfoDto): Promise<void>;
    onSetPassword(client: Socket, updatePasswordDto: UpdatePasswordDto): Promise<void>;
    onRemovePassword(client: Socket, channelId: number): Promise<void>;
    onKickUser(client: Socket, updateUserInfoDto: UpdateUserInfoDto): Promise<void>;
    onBanUser(client: Socket, updateUserInfoDto: UpdateUserInfoDto): Promise<void>;
    OnMuteUser(client: Socket, updateUserInfoDto: UpdateUserInfoDto): Promise<void>;
    private unmuteUser;
    onInviteGame(client: Socket, inviteGameDto: InviteGameDto): Promise<void>;
    onGameStatusUpdate(playerId: number): Promise<void>;
    private emitUserStatus;
}
